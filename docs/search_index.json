[["index.html", "Random Intercept Cross-Lagged Panel Model Sesion RI-CLPM", " Random Intercept Cross-Lagged Panel Model - Creado: 2021-03. Actualizado: 2021-08-19 Sesion RI-CLPM Escuela de Invierno COES: Random Intercept Cross-Lagged Panel Model, Este documento esta bajo una licencia de Creative Commons Atribución-NoComercial-CompartirIgual 4.0 Internacional (CC BY-NC-SA 4.0) "],["modelo.html", "1 Modelo", " 1 Modelo Con datos de ELSOC, replicaremos los resultados de Chayinska, Miranda &amp; Gonzalez (2021) Analizaremos las relaciones longitudinales entre la participación política online y off-line a través de la estimación de RI-CLPM. Las medidas que utilizaremos son las siguientes: Participacion politica on-line fue medida con un ítem unico en el cual se pregunta a los participantes reportar la frecuencias con la cual usan las redes sociales para expresar su opinión acerca de temas publicos durante los ultimos 12 meses (de 1 = nunca a 5 = muy frecuentemente). Participacion off-line en acciones colectivas fue medida con un item unico en el cual se pregunta a los participantes reportar que tan frecuentemente asistieron a una marcha o manifestacon politica durante los ultimos 12 meses (de 1 = nunca a 5 = muy frecuentemente). La figura 1 representa el modelo que pondremos a prueba. Figura 1.1: RI-CLPM conceptual de las asociaciones entre Participación Offline y Participación On-line \\(OFF_{it}\\) y \\(ON_{it}\\) son los puntajes observados de los participantes en participación off-line y participacion on-line respectivamente, en cada una de las 5 olas de ELSOC, para la persona \\(i\\). \\(RI_{OFFi}\\) y \\(RI_{ONi}\\) son los respectivos interceptos aleatorios, las desviaciones del individuo \\(i\\), en terminos de su puntaje esperado, respecto a la gran media de cada variable. Se trata de aquellos factores individuales que no varian en el tiempo y representan el componente between. \\(OFF^{*}_{it}\\) y \\(ON^{*}_{it}\\) representan las desviaciones temporales en \\(t\\) del individuo \\(i\\) respecto a sus puntajes esperados. Constituyen las fluctuaciones intra-persona, el componente within. Los estados iniciales en \\(t = 1\\) (aqui \\(OFF^{*}_{i1}\\) y \\(ON^{*}_{i1}\\)) son modelados como variables exógenas (sus varianzas y covarianzas son asumidas). Se tiene el supuesto de que los componentes within están correlacionados entre si en cada \\(t\\). \\(u_{it}\\) y \\(v_{it}\\) son los residuos. Por lo general, se tiene por supuesto que los residuos \\(u_{it}\\) y \\(v_{it}\\) están normalmente distribuidos y correlacionados entre sí, dentro de cada tiempo \\(t \\geq 2\\). "],["estimacion.html", "2 Estimacion 2.1 Sintaxis 2.2 Modelo basico", " 2 Estimacion Para estimar los modelos usamos las siguientes librerias: MplusAutomation (Hallquist et al., 2021), si queremos estimar los modelos usando Mplus desde R, facilitando la creacion de modelos, estimacion de grupos de modelos, extraccion y tabulación de parametros y, en general, mantener un flujo de trabajo mas organizado. lavaan (Rosseel,2012), si queremos estimar los modelos directamente desde R. Resumen de los datos: skim(elsoc) Tabla 2.1: Data summary Name elsoc Number of rows 2928 Number of columns 13 _______________________ Column type frequency: numeric 13 ________________________ Group variables None Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist marchw01 6 1.00 1.31 0.78 1 1 1 1 5 &lt;U+2587&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt; marchw02 455 0.84 1.22 0.64 1 1 1 1 5 &lt;U+2587&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt; marchw03 701 0.76 1.18 0.59 1 1 1 1 5 &lt;U+2587&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt; marchw04 775 0.74 1.50 0.99 1 1 1 1 5 &lt;U+2587&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt; marchw05 1188 0.59 1.20 0.64 1 1 1 1 5 &lt;U+2587&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt; redesw01 10 1.00 1.71 1.18 1 1 1 2 5 &lt;U+2587&gt;&lt;U+2581&gt;&lt;U+2582&gt;&lt;U+2581&gt;&lt;U+2581&gt; redesw02 455 0.84 1.60 1.09 1 1 1 2 5 &lt;U+2587&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt; redesw03 703 0.76 1.59 1.06 1 1 1 2 5 &lt;U+2587&gt;&lt;U+2581&gt;&lt;U+2582&gt;&lt;U+2581&gt;&lt;U+2581&gt; redesw04 775 0.74 1.86 1.28 1 1 1 3 5 &lt;U+2587&gt;&lt;U+2581&gt;&lt;U+2582&gt;&lt;U+2581&gt;&lt;U+2581&gt; redesw05 1188 0.59 1.84 1.22 1 1 1 3 5 &lt;U+2587&gt;&lt;U+2581&gt;&lt;U+2582&gt;&lt;U+2581&gt;&lt;U+2581&gt; edad 1 1.00 46.09 15.29 18 33 46 58 88 &lt;U+2586&gt;&lt;U+2587&gt;&lt;U+2587&gt;&lt;U+2585&gt;&lt;U+2581&gt; educ 3 1.00 5.26 2.20 1 4 5 7 10 &lt;U+2583&gt;&lt;U+2586&gt;&lt;U+2587&gt;&lt;U+2585&gt;&lt;U+2583&gt; sexo 1 1.00 1.60 0.49 1 1 2 2 2 &lt;U+2585&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2581&gt;&lt;U+2587&gt; 2.1 Sintaxis Para especificar el RI-CLPM necesitamos 4 partes: Componente between, los interceptos aleatorios. Los interceptos aleatorios son especificados creando variables latentes, con las medidas repetidas en \\(t\\) como indicadores. Las cargas factoriales son fijadas en 1 porque RI-CLPM se basa en el supuesto de que los interceptos aleatorios tienen igual influencia en cada ocasión. Se asume que los interceptos aleatorios están correlacionados entre si. Mplus: ! Crear los componentes between RI_x BY marchw01@1 marchw02@1 marchw03@1 marchw04@1 marchw05@1; RI_y BY redesw01@1 redesw02@1 redesw03@1 redesw04@1 redesw05@1; Lavaan: # Crear los componentes between RI_x =~ 1*marchw01 + 1*marchw02 + 1*marchw03 + 1*marchw04 + 1*marchw05 RI_y =~ 1*redesw01 + 1*redesw02 + 1*redesw03 + 1*redesw04 + 1*redesw05 Figura 2.1: RI-CLPM conceptual de las asociaciones entre Participación Offline y Participación On-line Componente within, fluctuaciones intra-individuos. Las diferencias within son especificadas como variables latentes explicadas por sus respectivas medidas observadas en cada ocasion. Mplus: ! Crear los componentes within cx1 BY marchw01@1; cx2 BY marchw02@1; cx3 BY marchw03@1; cx4 BY marchw04@1; cx5 BY marchw05@1; cy1 BY redesw01@1; cy2 BY redesw02@1; cy3 BY redesw03@1; cy4 BY redesw04@1; cy5 BY redesw05@1; Lavaan: # Crear los componentes within cx1 =~ 1*marchw01 cx2 =~ 1*marchw02 cx3 =~ 1*marchw03 cx4 =~ 1*marchw04 cx5 =~ 1*marchw05 cy1 =~ 1*redesw01 cy2 =~ 1*redesw02 cy3 =~ 1*redesw03 cy4 =~ 1*redesw04 cy5 =~ 1*redesw05 Se constriñen las varianzas del error de medicion a cero, no hay error de medicion. Mplus: ! Constrenir las varianzas del error de medicion a cero marchw01 - redesw05@0; Lavaan: # Constrenir las varianzas del error de medicion a cero marchw01 ~~ 0*marchw01 marchw02 ~~ 0*marchw02 marchw03 ~~ 0*marchw03 marchw04 ~~ 0*marchw04 marchw05 ~~ 0*marchw05 redesw01 ~~ 0*redesw01 redesw02 ~~ 0*redesw02 redesw03 ~~ 0*redesw03 redesw04 ~~ 0*redesw04 redesw05 ~~ 0*redesw05 Figura 2.2: RI-CLPM conceptual de las asociaciones entre Participación Offline y Participación On-line Las regresiones lagged (autorregresivas y crosslagged) entre los componentes within Mplus: ! Estimar los efectos lagged cx2 ON cx1 cy1; cx3 ON cx2 cy2; cx4 ON cx3 cy3; cx5 ON cx4 cy4; cy2 ON cx1 cy1; cy3 ON cx2 cy2; cy4 ON cx3 cy3; cy5 ON cx4 cy4; Lavaan: # Estimar los efectos lagged cx2 ~ cx1 + cy1 cx3 ~ cx2 + cy2 cx4 ~ cx3 + cy3 cx5 ~ cx4 + cy4 cy2 ~ cx1 + cy1 cy3 ~ cx2 + cy2 cy4 ~ cx3 + cy3 cy5 ~ cx4 + cy4 Figura 2.3: RI-CLPM conceptual de las asociaciones entre Participación Offline y Participación On-line Covarianzas relevantes en los componentes between y within Tanto en la primera ola (exogenas) como sus residuos desde la ola 2 se especifica que los componentes within esten correlacionados dentro de cada ola. Mplus: ! Estimar la covarianza entre los componentes within t=1 cx1 WITH cy1; ! Estimar las covarianzas entre los residuos del componente within (innovations) cx2 WITH cy2; cx3 WITH cy3; cx4 WITH cy4; cx5 WITH cy5; Lavaan: # Estimar la covarianza entre los componentes within t=1 cx1 ~~ cy1 # Estimar las covarianzas entre los residuos del componente within (innovations) cx2 ~~ cy2 cx3 ~~ cy3 cx4 ~~ cy4 cx5 ~~ cy5 En el componente between, se especifica que los interceptos aleatorios estan correlacionados. Además, se indica que los componentes within en la primera ola y los interceptos aleatorios no estan correlacionados. Las observaciones por lo general empiezan en un punto arbitrario del tiempo durante un proceso en desarrollo, por lo que no existen razones para asumir que estan relacionados. Mplus: ! Estimar la covarianza entre los RI RI_x WITH RI_y; ! Fijar la correlacion entre los RI y componentes within t=1 a cero RI_x WITH cx1@0 cy1@0; RI_y WITH cx1@0 cy1@0; Lavaan: # Estimar la varianza y covarianza entre los RI. RI_x ~~ RI_x RI_y ~~ RI_y RI_x ~~ RI_y # Fijar la correlacion entre los RI y componentes within t=1 a cero RI_x ~~ 0*cx1 RI_x ~~ 0*cy1 RI_y ~~ 0*cx1 RI_y ~~ 0*cy1 2.2 Modelo basico MPLUS lavaan Creamos el objeto model_mplus que contiene el modelo usando la funcion mplusObject( ) model_mplus &lt;- mplusObject( TITLE = &quot;RI CLPM;&quot;, ANALYSIS= &quot;ESTIMATOR IS ML ; ITERATIONS = 5000;&quot;, MODEL = &quot; ! Crear los componentes between RI_x BY marchw01@1 marchw02@1 marchw03@1 marchw04@1 marchw05@1; RI_y BY redesw01@1 redesw02@1 redesw03@1 redesw04@1 redesw05@1; ! Crear los componentes within cx1 BY marchw01@1; cx2 BY marchw02@1; cx3 BY marchw03@1; cx4 BY marchw04@1; cx5 BY marchw05@1; cy1 BY redesw01@1; cy2 BY redesw02@1; cy3 BY redesw03@1; cy4 BY redesw04@1; cy5 BY redesw05@1; ! Constrenir las varianzas del error de medicion a cero marchw01 - redesw05@0; ! Estimar los efectos lagged cx2 ON cx1 cy1; cx3 ON cx2 cy2; cx4 ON cx3 cy3; cx5 ON cx4 cy4; cy2 ON cx1 cy1; cy3 ON cx2 cy2; cy4 ON cx3 cy3; cy5 ON cx4 cy4; ! Estimar la covarianza entre los componentes within t=1 cx1 WITH cy1; ! Estimar las covarianzas entre los residuos del componente within (innovations) cx2 WITH cy2; cx3 WITH cy3; cx4 WITH cy4; cx5 WITH cy5; ! Estimar la covarianza entre los RI RI_x WITH RI_y; ! Fijar la correlacion entre los RI y componentes within t=1 a cero RI_x WITH cx1@0 cy1@0; RI_y WITH cx1@0 cy1@0; &quot; , OUTPUT = &quot;CINTERVAL sampstat mod stdyx tech1 tech4;&quot;, rdata = elsoc) Estimamos el objeto model_mplus usando la funcion mplusModeler( ) fit_mplus &lt;- mplusModeler(model_mplus, modelout = &quot;mplus/modelo_basico.inp&quot;, run = 1L) screenreg(fit_mplus, type = &quot;stdyx&quot;, # params = &quot;regression&quot;, summaries = c(&quot;ChiSqM_Value&quot;, &quot;ChiSqM_PValue&quot;, &quot;CFI&quot;, &quot;TLI&quot;, &quot;RMSEA_Estimate&quot;, &quot;Observations&quot;), # custom.header = list(&quot;RICLPM&quot;=1), custom.model.names = c(&quot;RICLPM basico&quot;), digits = 3, single.row=TRUE) ## ## ============================================= ## RICLPM basico ## --------------------------------------------- ## CX2&lt;-CX1 0.172 (0.028) *** ## CX2&lt;-CY1 -0.040 (0.028) ## CX3&lt;-CX2 0.156 (0.035) *** ## CX3&lt;-CY2 -0.042 (0.032) ## CX4&lt;-CX3 0.130 (0.030) *** ## CX4&lt;-CY3 0.119 (0.028) *** ## CX5&lt;-CX4 0.273 (0.028) *** ## CX5&lt;-CY4 0.052 (0.029) ## CY2&lt;-CX1 0.006 (0.029) ## CY2&lt;-CY1 -0.002 (0.031) ## CY3&lt;-CX2 0.077 (0.033) * ## CY3&lt;-CY2 0.078 (0.035) * ## CY4&lt;-CX3 0.003 (0.029) ## CY4&lt;-CY3 0.195 (0.029) *** ## CY5&lt;-CX4 0.090 (0.026) ** ## CY5&lt;-CY4 0.316 (0.027) *** ## MARCHW01&lt;-RI_X 0.492 (0.015) *** ## MARCHW02&lt;-RI_X 0.577 (0.018) *** ## MARCHW03&lt;-RI_X 0.625 (0.018) *** ## MARCHW04&lt;-RI_X 0.395 (0.014) *** ## MARCHW05&lt;-RI_X 0.557 (0.014) *** ## REDESW01&lt;-RI_Y 0.631 (0.012) *** ## REDESW02&lt;-RI_Y 0.676 (0.013) *** ## REDESW03&lt;-RI_Y 0.691 (0.013) *** ## REDESW04&lt;-RI_Y 0.595 (0.012) *** ## REDESW05&lt;-RI_Y 0.620 (0.012) *** ## MARCHW01&lt;-CX1 0.871 (0.009) *** ## MARCHW02&lt;-CX2 0.817 (0.012) *** ## MARCHW03&lt;-CX3 0.781 (0.014) *** ## MARCHW04&lt;-CX4 0.919 (0.006) *** ## MARCHW05&lt;-CX5 0.830 (0.010) *** ## REDESW01&lt;-CY1 0.776 (0.010) *** ## REDESW02&lt;-CY2 0.737 (0.012) *** ## REDESW03&lt;-CY3 0.723 (0.012) *** ## REDESW04&lt;-CY4 0.804 (0.009) *** ## REDESW05&lt;-CY5 0.785 (0.009) *** ## CX1&lt;-&gt;CY1 0.271 (0.022) *** ## CX2&lt;-&gt;CY2 0.265 (0.028) *** ## CX3&lt;-&gt;CY3 0.176 (0.029) *** ## CX4&lt;-&gt;CY4 0.293 (0.022) *** ## CX5&lt;-&gt;CY5 0.047 (0.027) ## RI_X&lt;-&gt;RI_Y 0.664 (0.025) *** ## RI_X&lt;-&gt;CX1 0.000 (0.000) ## RI_X&lt;-&gt;CY1 0.000 (0.000) ## RI_Y&lt;-&gt;CX1 0.000 (0.000) ## RI_Y&lt;-&gt;CY1 0.000 (0.000) ## MARCHW01&lt;-Intercepts 1.734 (0.028) *** ## MARCHW02&lt;-Intercepts 1.886 (0.032) *** ## MARCHW03&lt;-Intercepts 1.994 (0.035) *** ## MARCHW04&lt;-Intercepts 1.592 (0.031) *** ## MARCHW05&lt;-Intercepts 1.778 (0.039) *** ## REDESW01&lt;-Intercepts 1.464 (0.026) *** ## REDESW02&lt;-Intercepts 1.473 (0.028) *** ## REDESW03&lt;-Intercepts 1.503 (0.029) *** ## REDESW04&lt;-Intercepts 1.502 (0.029) *** ## REDESW05&lt;-Intercepts 1.523 (0.032) *** ## RI_X&lt;-&gt;RI_X 1.000 (0.000) ## RI_Y&lt;-&gt;RI_Y 1.000 (0.000) ## CX1&lt;-&gt;CX1 1.000 (0.000) ## CY1&lt;-&gt;CY1 1.000 (0.000) ## MARCHW01&lt;-&gt;MARCHW01 0.000 (999.000) ## MARCHW02&lt;-&gt;MARCHW02 0.000 (999.000) ## MARCHW03&lt;-&gt;MARCHW03 0.000 (999.000) ## MARCHW04&lt;-&gt;MARCHW04 0.000 (999.000) ## MARCHW05&lt;-&gt;MARCHW05 0.000 (999.000) ## REDESW01&lt;-&gt;REDESW01 0.000 (999.000) ## REDESW02&lt;-&gt;REDESW02 0.000 (999.000) ## REDESW03&lt;-&gt;REDESW03 0.000 (999.000) ## REDESW04&lt;-&gt;REDESW04 0.000 (999.000) ## REDESW05&lt;-&gt;REDESW05 0.000 (999.000) ## CX2&lt;-&gt;CX2 0.973 (0.009) *** ## CX3&lt;-&gt;CX3 0.977 (0.010) *** ## CX4&lt;-&gt;CX4 0.963 (0.012) *** ## CX5&lt;-&gt;CX5 0.914 (0.015) *** ## CY2&lt;-&gt;CY2 1.000 (0.000) *** ## CY3&lt;-&gt;CY3 0.985 (0.009) *** ## CY4&lt;-&gt;CY4 0.962 (0.011) *** ## CY5&lt;-&gt;CY5 0.874 (0.018) *** ## --------------------------------------------- ## ChiSqM_Value 254.584 ## ChiSqM_PValue 0.000 ## CFI 0.966 ## TLI 0.927 ## RMSEA_Estimate 0.062 ## Observations 2927 ## ============================================= ## *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05 Creamos el objeto model_lavaan que contiene el modelo model_lavaan &lt;- &#39; # Crear los componentes between RI_x =~ 1*marchw01 + 1*marchw02 + 1*marchw03 + 1*marchw04 + 1*marchw05 RI_y =~ 1*redesw01 + 1*redesw02 + 1*redesw03 + 1*redesw04 + 1*redesw05 # Crear los componentes within cx1 =~ 1*marchw01 cx2 =~ 1*marchw02 cx3 =~ 1*marchw03 cx4 =~ 1*marchw04 cx5 =~ 1*marchw05 cy1 =~ 1*redesw01 cy2 =~ 1*redesw02 cy3 =~ 1*redesw03 cy4 =~ 1*redesw04 cy5 =~ 1*redesw05 # Constrenir las varianzas del error de medicion a cero marchw01 ~~ 0*marchw01 marchw02 ~~ 0*marchw02 marchw03 ~~ 0*marchw03 marchw04 ~~ 0*marchw04 marchw05 ~~ 0*marchw05 redesw01 ~~ 0*redesw01 redesw02 ~~ 0*redesw02 redesw03 ~~ 0*redesw03 redesw04 ~~ 0*redesw04 redesw05 ~~ 0*redesw05 # Estimar los efectos lagged cx2 ~ cx1 + cy1 cx3 ~ cx2 + cy2 cx4 ~ cx3 + cy3 cx5 ~ cx4 + cy4 cy2 ~ cx1 + cy1 cy3 ~ cx2 + cy2 cy4 ~ cx3 + cy3 cy5 ~ cx4 + cy4 # Estimar la covarianza entre los componentes within t=1 cx1 ~~ cy1 # Estimar las covarianzas entre los residuos del componente within (innovations) cx2 ~~ cy2 cx3 ~~ cy3 cx4 ~~ cy4 cx5 ~~ cy5 # Estimar la varianza y covarianza entre los RI. RI_x ~~ RI_x RI_y ~~ RI_y RI_x ~~ RI_y # Fijar la correlacion entre los RI y componentes within t=1 a cero RI_x ~~ 0*cx1 RI_x ~~ 0*cy1 RI_y ~~ 0*cx1 RI_y ~~ 0*cy1 &#39; Estimamos el objeto model_lavaan usando la funcion sem( ) fit_lavaan &lt;- sem(model_lavaan, data=elsoc, missing = &quot;fiml&quot;) summary(fit_lavaan, fit.measures=TRUE, standardized = T) ## lavaan 0.6-9 ended normally after 50 iterations ## ## Estimator ML ## Optimization method NLMINB ## Number of model parameters 44 ## ## Used Total ## Number of observations 2927 2928 ## Number of missing patterns 23 ## ## Model Test User Model: ## ## Test statistic 254.584 ## Degrees of freedom 21 ## P-value (Chi-square) 0.000 ## ## Model Test Baseline Model: ## ## Test statistic 6865.547 ## Degrees of freedom 45 ## P-value 0.000 ## ## User Model versus Baseline Model: ## ## Comparative Fit Index (CFI) 0.966 ## Tucker-Lewis Index (TLI) 0.927 ## ## Loglikelihood and Information Criteria: ## ## Loglikelihood user model (H0) -27263.651 ## Loglikelihood unrestricted model (H1) -27136.359 ## ## Akaike (AIC) 54615.302 ## Bayesian (BIC) 54878.498 ## Sample-size adjusted Bayesian (BIC) 54738.694 ## ## Root Mean Square Error of Approximation: ## ## RMSEA 0.062 ## 90 Percent confidence interval - lower 0.055 ## 90 Percent confidence interval - upper 0.069 ## P-value RMSEA &lt;= 0.05 0.002 ## ## Standardized Root Mean Square Residual: ## ## SRMR 0.061 ## ## Parameter Estimates: ## ## Standard errors Standard ## Information Observed ## Observed information based on Hessian ## ## Latent Variables: ## Estimate Std.Err z-value P(&gt;|z|) Std.lv ## RI_x =~ ## marchw01 1.000 0.373 ## marchw02 1.000 0.373 ## marchw03 1.000 0.373 ## marchw04 1.000 0.373 ## marchw05 1.000 0.373 ## RI_y =~ ## redesw01 1.000 0.739 ## redesw02 1.000 0.739 ## redesw03 1.000 0.739 ## redesw04 1.000 0.739 ## redesw05 1.000 0.739 ## cx1 =~ ## marchw01 1.000 0.659 ## cx2 =~ ## marchw02 1.000 0.527 ## cx3 =~ ## marchw03 1.000 0.465 ## cx4 =~ ## marchw04 1.000 0.866 ## cx5 =~ ## marchw05 1.000 0.555 ## cy1 =~ ## redesw01 1.000 0.908 ## cy2 =~ ## redesw02 1.000 0.804 ## cy3 =~ ## redesw03 1.000 0.772 ## cy4 =~ ## redesw04 1.000 0.998 ## cy5 =~ ## redesw05 1.000 0.935 ## Std.all ## ## 0.492 ## 0.577 ## 0.625 ## 0.395 ## 0.557 ## ## 0.631 ## 0.676 ## 0.691 ## 0.595 ## 0.620 ## ## 0.871 ## ## 0.817 ## ## 0.781 ## ## 0.919 ## ## 0.830 ## ## 0.776 ## ## 0.737 ## ## 0.723 ## ## 0.804 ## ## 0.785 ## ## Regressions: ## Estimate Std.Err z-value P(&gt;|z|) Std.lv ## cx2 ~ ## cx1 0.138 0.023 5.944 0.000 0.172 ## cy1 -0.023 0.016 -1.418 0.156 -0.040 ## cx3 ~ ## cx2 0.138 0.031 4.422 0.000 0.156 ## cy2 -0.024 0.019 -1.292 0.196 -0.042 ## cx4 ~ ## cx3 0.241 0.055 4.412 0.000 0.130 ## cy3 0.134 0.031 4.328 0.000 0.119 ## cx5 ~ ## cx4 0.175 0.018 9.686 0.000 0.273 ## cy4 0.029 0.016 1.774 0.076 0.052 ## cy2 ~ ## cx1 0.007 0.035 0.196 0.844 0.006 ## cy1 -0.002 0.028 -0.056 0.956 -0.002 ## cy3 ~ ## cx2 0.113 0.048 2.360 0.018 0.077 ## cy2 0.075 0.033 2.256 0.024 0.078 ## cy4 ~ ## cx3 0.006 0.062 0.095 0.924 0.003 ## cy3 0.252 0.037 6.763 0.000 0.195 ## cy5 ~ ## cx4 0.097 0.028 3.408 0.001 0.090 ## cy4 0.297 0.026 11.327 0.000 0.316 ## Std.all ## ## 0.172 ## -0.040 ## ## 0.156 ## -0.042 ## ## 0.130 ## 0.119 ## ## 0.273 ## 0.052 ## ## 0.006 ## -0.002 ## ## 0.077 ## 0.078 ## ## 0.003 ## 0.195 ## ## 0.090 ## 0.316 ## ## Covariances: ## Estimate Std.Err z-value P(&gt;|z|) Std.lv ## cx1 ~~ ## cy1 0.162 0.015 10.484 0.000 0.271 ## .cx2 ~~ ## .cy2 0.111 0.014 8.090 0.000 0.266 ## .cx3 ~~ ## .cy3 0.062 0.011 5.629 0.000 0.176 ## .cx4 ~~ ## .cy4 0.244 0.021 11.724 0.000 0.293 ## .cx5 ~~ ## .cy5 0.022 0.013 1.692 0.091 0.047 ## RI_x ~~ ## RI_y 0.183 0.011 16.314 0.000 0.664 ## cx1 0.000 0.000 ## cy1 0.000 0.000 ## RI_y ~~ ## cx1 0.000 0.000 ## cy1 0.000 0.000 ## Std.all ## ## 0.271 ## ## 0.266 ## ## 0.176 ## ## 0.293 ## ## 0.047 ## ## 0.664 ## 0.000 ## 0.000 ## ## 0.000 ## 0.000 ## ## Intercepts: ## Estimate Std.Err z-value P(&gt;|z|) Std.lv ## .marchw01 1.313 0.014 93.761 0.000 1.313 ## .marchw02 1.217 0.013 95.359 0.000 1.217 ## .marchw03 1.189 0.012 96.627 0.000 1.189 ## .marchw04 1.501 0.020 75.015 0.000 1.501 ## .marchw05 1.189 0.015 77.732 0.000 1.189 ## .redesw01 1.714 0.022 79.128 0.000 1.714 ## .redesw02 1.609 0.022 74.657 0.000 1.609 ## .redesw03 1.607 0.022 73.702 0.000 1.607 ## .redesw04 1.865 0.026 72.139 0.000 1.865 ## .redesw05 1.815 0.027 68.183 0.000 1.815 ## RI_x 0.000 0.000 ## RI_y 0.000 0.000 ## cx1 0.000 0.000 ## .cx2 0.000 0.000 ## .cx3 0.000 0.000 ## .cx4 0.000 0.000 ## .cx5 0.000 0.000 ## cy1 0.000 0.000 ## .cy2 0.000 0.000 ## .cy3 0.000 0.000 ## .cy4 0.000 0.000 ## .cy5 0.000 0.000 ## Std.all ## 1.734 ## 1.886 ## 1.994 ## 1.592 ## 1.778 ## 1.464 ## 1.473 ## 1.503 ## 1.502 ## 1.523 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## ## Variances: ## Estimate Std.Err z-value P(&gt;|z|) Std.lv ## .marchw01 0.000 0.000 ## .marchw02 0.000 0.000 ## .marchw03 0.000 0.000 ## .marchw04 0.000 0.000 ## .marchw05 0.000 0.000 ## .redesw01 0.000 0.000 ## .redesw02 0.000 0.000 ## .redesw03 0.000 0.000 ## .redesw04 0.000 0.000 ## .redesw05 0.000 0.000 ## RI_x 0.139 0.009 15.795 0.000 1.000 ## RI_y 0.546 0.023 23.314 0.000 1.000 ## cx1 0.435 0.015 29.593 0.000 1.000 ## .cx2 0.270 0.011 24.875 0.000 0.973 ## .cx3 0.212 0.009 23.090 0.000 0.977 ## .cx4 0.723 0.024 30.476 0.000 0.963 ## .cx5 0.282 0.011 24.954 0.000 0.914 ## cy1 0.824 0.030 27.648 0.000 1.000 ## .cy2 0.647 0.030 21.437 0.000 1.000 ## .cy3 0.587 0.025 23.458 0.000 0.985 ## .cy4 0.958 0.033 28.670 0.000 0.962 ## .cy5 0.765 0.029 26.373 0.000 0.874 ## Std.all ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 0.000 ## 1.000 ## 1.000 ## 1.000 ## 0.973 ## 0.977 ## 0.963 ## 0.914 ## 1.000 ## 1.000 ## 0.985 ## 0.962 ## 0.874 "],["nestedm.html", "3 Modelos anidados 3.1 Indicadores de bondad de ajuste 3.2 Comparacion de bondad de ajuste", " 3 Modelos anidados La estimacion usualmente sigue una estrategia de modelos anidados entre los cuales se compara su bondad de ajuste. Recordemos nuestras hipotesis Figura 3.1: Hipotesis en torno a las relaciones entre Participación Offline y Participación On-line De esta manera estimamos: El modelo A contiene sólo los paths autorregresivos. El modelo B unidireccional. Contiene los paths autorregresivos y los paths cross-lagged (forward). El modelo C unidireccional. Contiene los paths autorregresivos y los paths cross-lagged (reverse). El modelo D bidireccional. Contiene los paths autorregresivos y los paths cross-lagged en ambas direcciones. Adicionalmente, en cada uno de estos modelos, se comparan las bondades de ajuste entre modelos estimados libremente y modelos constreñidos para testear si los efectos son iguales en el tiempo. 3.0.1 Sintaxis constraints En Mplus, las restricciones al modelo se realizan asignando etiquetas a los parametros y utilizando la misma etiqueta para los parametros que quedaran constreñidos a ser iguales. Mplus: ! Estimar los efectos lagged (constreñidos en el tiempo) cx2 ON cx1 cy1 (a d); cx3 ON cx2 cy2 (a d); cx4 ON cx3 cy3 (a d); cx5 ON cx4 cy4 (a d); cy2 ON cx1 cy1 (c b); cy3 ON cx2 cy2 (c b); cy4 ON cx3 cy3 (c b); cy5 ON cx4 cy4 (c b); En lavaan, las restricciones al modelo se logran a traves de pre-multiplicacion: Se agrega a cada parametro un numero al cual queremos fijarlo o una etiqueta, junto a un asterisco, y luego se indica el parametro en la especificacion del modelo. Para constreñir la igualdad entre parametros se utiliza frente a ellos el mismo numero o la misma etiqueta. Lavaan: # Estimar los efectos lagged (constreñidos en el tiempo) cx2 ~ a*cx1 + d*cy1 cx3 ~ a*cx2 + d*cy2 cx4 ~ a*cx3 + d*cy3 cx5 ~ a*cx4 + d*cy4 cy2 ~ c*cx1 + b*cy1 cy3 ~ c*cx2 + b*cy2 cy4 ~ c*cx3 + b*cy3 cy5 ~ c*cx4 + b*cy4 Estimamos los modelos: Modelo A1 Modelo A2 Modelo B1 Modelo B2 Modelo C1 Modelo C2 Modelo D1 Modelo D2 Run modelos &lt;- list() modelos[[&quot;m_A1&quot;]] &lt;- mplusObject( TITLE = &quot;RI CLPM - A1;&quot;, ANALYSIS= &quot;ESTIMATOR = mlr; ITERATIONS = 5000;&quot;, MODEL = &quot; ! Crear los componentes between RI_x BY marchw01@1 marchw02@1 marchw03@1 marchw04@1 marchw05@1; RI_y BY redesw01@1 redesw02@1 redesw03@1 redesw04@1 redesw05@1; ! Crear los componentes within cx1 BY marchw01@1; cx2 BY marchw02@1; cx3 BY marchw03@1; cx4 BY marchw04@1; cx5 BY marchw05@1; cy1 BY redesw01@1; cy2 BY redesw02@1; cy3 BY redesw03@1; cy4 BY redesw04@1; cy5 BY redesw05@1; ! Constrenir las varianzas del error de medicion a cero marchw01 - redesw05@0; ! Estimar los efectos lagged (autorregresivos) cx2 ON cx1; cx3 ON cx2; cx4 ON cx3; cx5 ON cx4; cy2 ON cy1; cy3 ON cy2; cy4 ON cy3; cy5 ON cy4; ! Estimar la covarianza entre los componentes within t=1 cx1 WITH cy1; ! Estimar las covarianzas entre los residuos del componente within (innovations) cx2 WITH cy2; cx3 WITH cy3; cx4 WITH cy4; cx5 WITH cy5; ! Estimar la covarianza entre los RI RI_x WITH RI_y; ! Fijar la correlacion entre los RI y componentes within t=1 a cero RI_x WITH cx1@0 cy1@0; RI_y WITH cx1@0 cy1@0; &quot; , OUTPUT = &quot;CINTERVAL sampstat mod stdyx tech1 tech4;&quot;, rdata = elsoc) modelos[[&quot;m_A2&quot;]] &lt;- mplusObject( TITLE = &quot;RI CLPM - A2;&quot;, ANALYSIS= &quot;ESTIMATOR = mlr; ITERATIONS = 5000;&quot;, MODEL = &quot; ! Crear los componentes between RI_x BY marchw01@1 marchw02@1 marchw03@1 marchw04@1 marchw05@1; RI_y BY redesw01@1 redesw02@1 redesw03@1 redesw04@1 redesw05@1; ! Crear los componentes within cx1 BY marchw01@1; cx2 BY marchw02@1; cx3 BY marchw03@1; cx4 BY marchw04@1; cx5 BY marchw05@1; cy1 BY redesw01@1; cy2 BY redesw02@1; cy3 BY redesw03@1; cy4 BY redesw04@1; cy5 BY redesw05@1; ! Constrenir las varianzas del error de medicion a cero marchw01 - redesw05@0; ! Estimar los efectos lagged (autorregresivos) cx2 ON cx1 (a); cx3 ON cx2 (a); cx4 ON cx3 (a); cx5 ON cx4 (a); cy2 ON cy1 (b); cy3 ON cy2 (b); cy4 ON cy3 (b); cy5 ON cy4 (b); ! Estimar la covarianza entre los componentes within t=1 cx1 WITH cy1; ! Estimar las covarianzas entre los residuos del componente within (innovations) cx2 WITH cy2; cx3 WITH cy3; cx4 WITH cy4; cx5 WITH cy5; ! Estimar la covarianza entre los RI RI_x WITH RI_y; ! Fijar la correlacion entre los RI y componentes within t=1 a cero RI_x WITH cx1@0 cy1@0; RI_y WITH cx1@0 cy1@0; &quot; , OUTPUT = &quot;CINTERVAL sampstat mod stdyx tech1 tech4;&quot;, rdata = elsoc) modelos[[&quot;m_B1&quot;]] &lt;- mplusObject( TITLE = &quot;RI CLPM - B1;&quot;, ANALYSIS= &quot;ESTIMATOR = mlr; ITERATIONS = 5000;&quot;, MODEL = &quot; ! Crear los componentes between RI_x BY marchw01@1 marchw02@1 marchw03@1 marchw04@1 marchw05@1; RI_y BY redesw01@1 redesw02@1 redesw03@1 redesw04@1 redesw05@1; ! Crear los componentes within cx1 BY marchw01@1; cx2 BY marchw02@1; cx3 BY marchw03@1; cx4 BY marchw04@1; cx5 BY marchw05@1; cy1 BY redesw01@1; cy2 BY redesw02@1; cy3 BY redesw03@1; cy4 BY redesw04@1; cy5 BY redesw05@1; ! Constrenir las varianzas del error de medicion a cero marchw01 - redesw05@0; ! Estimar los efectos lagged cx2 ON cx1; cx3 ON cx2; cx4 ON cx3; cx5 ON cx4; cy2 ON cx1 cy1; cy3 ON cx2 cy2; cy4 ON cx3 cy3; cy5 ON cx4 cy4; ! Estimar la covarianza entre los componentes within t=1 cx1 WITH cy1; ! Estimar las covarianzas entre los residuos del componente within (innovations) cx2 WITH cy2; cx3 WITH cy3; cx4 WITH cy4; cx5 WITH cy5; ! Estimar la covarianza entre los RI RI_x WITH RI_y; ! Fijar la correlacion entre los RI y componentes within t=1 a cero RI_x WITH cx1@0 cy1@0; RI_y WITH cx1@0 cy1@0; &quot; , OUTPUT = &quot;CINTERVAL sampstat mod stdyx tech1 tech4;&quot;, rdata = elsoc) modelos[[&quot;m_B2&quot;]] &lt;- mplusObject( TITLE = &quot;RI CLPM - B2;&quot;, ANALYSIS= &quot;ESTIMATOR = mlr; ITERATIONS = 5000;&quot;, MODEL = &quot; ! Crear los componentes between RI_x BY marchw01@1 marchw02@1 marchw03@1 marchw04@1 marchw05@1; RI_y BY redesw01@1 redesw02@1 redesw03@1 redesw04@1 redesw05@1; ! Crear los componentes within cx1 BY marchw01@1; cx2 BY marchw02@1; cx3 BY marchw03@1; cx4 BY marchw04@1; cx5 BY marchw05@1; cy1 BY redesw01@1; cy2 BY redesw02@1; cy3 BY redesw03@1; cy4 BY redesw04@1; cy5 BY redesw05@1; ! Constrenir las varianzas del error de medicion a cero marchw01 - redesw05@0; ! Estimar los efectos lagged cx2 ON cx1 (a); cx3 ON cx2 (a); cx4 ON cx3 (a); cx5 ON cx4 (a); cy2 ON cx1 cy1 (c b); cy3 ON cx2 cy2 (c b); cy4 ON cx3 cy3 (c b); cy5 ON cx4 cy4 (c b); ! Estimar la covarianza entre los componentes within t=1 cx1 WITH cy1; ! Estimar las covarianzas entre los residuos del componente within (innovations) cx2 WITH cy2; cx3 WITH cy3; cx4 WITH cy4; cx5 WITH cy5; ! Estimar la covarianza entre los RI RI_x WITH RI_y; ! Fijar la correlacion entre los RI y componentes within t=1 a cero RI_x WITH cx1@0 cy1@0; RI_y WITH cx1@0 cy1@0; &quot; , OUTPUT = &quot;CINTERVAL sampstat mod stdyx tech1 tech4;&quot;, rdata = elsoc) modelos[[&quot;m_C1&quot;]] &lt;- mplusObject( TITLE = &quot;RI CLPM - C1;&quot;, ANALYSIS= &quot;ESTIMATOR = mlr; ITERATIONS = 5000;&quot;, MODEL = &quot; ! Crear los componentes between RI_x BY marchw01@1 marchw02@1 marchw03@1 marchw04@1 marchw05@1; RI_y BY redesw01@1 redesw02@1 redesw03@1 redesw04@1 redesw05@1; ! Crear los componentes within cx1 BY marchw01@1; cx2 BY marchw02@1; cx3 BY marchw03@1; cx4 BY marchw04@1; cx5 BY marchw05@1; cy1 BY redesw01@1; cy2 BY redesw02@1; cy3 BY redesw03@1; cy4 BY redesw04@1; cy5 BY redesw05@1; ! Constrenir las varianzas del error de medicion a cero marchw01 - redesw05@0; ! Estimar los efectos lagged cx2 ON cx1 cy1; cx3 ON cx2 cy2; cx4 ON cx3 cy3; cx5 ON cx4 cy4; cy2 ON cy1; cy3 ON cy2; cy4 ON cy3; cy5 ON cy4; ! Estimar la covarianza entre los componentes within t=1 cx1 WITH cy1; ! Estimar las covarianzas entre los residuos del componente within (innovations) cx2 WITH cy2; cx3 WITH cy3; cx4 WITH cy4; cx5 WITH cy5; ! Estimar la covarianza entre los RI RI_x WITH RI_y; ! Fijar la correlacion entre los RI y componentes within t=1 a cero RI_x WITH cx1@0 cy1@0; RI_y WITH cx1@0 cy1@0; &quot; , OUTPUT = &quot;CINTERVAL sampstat mod stdyx tech1 tech4;&quot;, rdata = elsoc) modelos[[&quot;m_C2&quot;]] &lt;- mplusObject( TITLE = &quot;RI CLPM - C2;&quot;, ANALYSIS= &quot;ESTIMATOR = mlr; ITERATIONS = 5000;&quot;, MODEL = &quot; ! Crear los componentes between RI_x BY marchw01@1 marchw02@1 marchw03@1 marchw04@1 marchw05@1; RI_y BY redesw01@1 redesw02@1 redesw03@1 redesw04@1 redesw05@1; ! Crear los componentes within cx1 BY marchw01@1; cx2 BY marchw02@1; cx3 BY marchw03@1; cx4 BY marchw04@1; cx5 BY marchw05@1; cy1 BY redesw01@1; cy2 BY redesw02@1; cy3 BY redesw03@1; cy4 BY redesw04@1; cy5 BY redesw05@1; ! Constrenir las varianzas del error de medicion a cero marchw01 - redesw05@0; ! Estimar los efectos lagged cx2 ON cx1 cy1 (a d); cx3 ON cx2 cy2 (a d); cx4 ON cx3 cy3 (a d); cx5 ON cx4 cy4 (a d); cy2 ON cy1 (b); cy3 ON cy2 (b); cy4 ON cy3 (b); cy5 ON cy4 (b); ! Estimar la covarianza entre los componentes within t=1 cx1 WITH cy1; ! Estimar las covarianzas entre los residuos del componente within (innovations) cx2 WITH cy2; cx3 WITH cy3; cx4 WITH cy4; cx5 WITH cy5; ! Estimar la covarianza entre los RI RI_x WITH RI_y; ! Fijar la correlacion entre los RI y componentes within t=1 a cero RI_x WITH cx1@0 cy1@0; RI_y WITH cx1@0 cy1@0; &quot; , OUTPUT = &quot;CINTERVAL sampstat mod stdyx tech1 tech4;&quot;, rdata = elsoc) modelos[[&quot;m_D1&quot;]] &lt;- mplusObject( TITLE = &quot;RI CLPM - D1;&quot;, ANALYSIS= &quot;ESTIMATOR = mlr; ITERATIONS = 5000;&quot;, MODEL = &quot; ! Crear los componentes between RI_x BY marchw01@1 marchw02@1 marchw03@1 marchw04@1 marchw05@1; RI_y BY redesw01@1 redesw02@1 redesw03@1 redesw04@1 redesw05@1; ! Crear los componentes within cx1 BY marchw01@1; cx2 BY marchw02@1; cx3 BY marchw03@1; cx4 BY marchw04@1; cx5 BY marchw05@1; cy1 BY redesw01@1; cy2 BY redesw02@1; cy3 BY redesw03@1; cy4 BY redesw04@1; cy5 BY redesw05@1; ! Constrenir las varianzas del error de medicion a cero marchw01 - redesw05@0; ! Estimar los efectos lagged cx2 ON cx1 cy1; cx3 ON cx2 cy2; cx4 ON cx3 cy3; cx5 ON cx4 cy4; cy2 ON cx1 cy1; cy3 ON cx2 cy2; cy4 ON cx3 cy3; cy5 ON cx4 cy4; ! Estimar la covarianza entre los componentes within t=1 cx1 WITH cy1; ! Estimar las covarianzas entre los residuos del componente within (innovations) cx2 WITH cy2; cx3 WITH cy3; cx4 WITH cy4; cx5 WITH cy5; ! Estimar la covarianza entre los RI RI_x WITH RI_y; ! Fijar la correlacion entre los RI y componentes within t=1 a cero RI_x WITH cx1@0 cy1@0; RI_y WITH cx1@0 cy1@0; &quot; , OUTPUT = &quot;CINTERVAL sampstat mod stdyx tech1 tech4;&quot;, rdata = elsoc) modelos[[&quot;m_D2&quot;]] &lt;- mplusObject( TITLE = &quot;RI CLPM - D2;&quot;, ANALYSIS= &quot;ESTIMATOR = mlr; ITERATIONS = 5000;&quot;, MODEL = &quot; ! Crear los componentes between RI_x BY marchw01@1 marchw02@1 marchw03@1 marchw04@1 marchw05@1; RI_y BY redesw01@1 redesw02@1 redesw03@1 redesw04@1 redesw05@1; ! Crear los componentes within cx1 BY marchw01@1; cx2 BY marchw02@1; cx3 BY marchw03@1; cx4 BY marchw04@1; cx5 BY marchw05@1; cy1 BY redesw01@1; cy2 BY redesw02@1; cy3 BY redesw03@1; cy4 BY redesw04@1; cy5 BY redesw05@1; ! Constrenir las varianzas del error de medicion a cero marchw01 - redesw05@0; ! Estimar los efectos lagged cx2 ON cx1 cy1 (a d); cx3 ON cx2 cy2 (a d); cx4 ON cx3 cy3 (a d); cx5 ON cx4 cy4 (a d); cy2 ON cx1 cy1 (c b); cy3 ON cx2 cy2 (c b); cy4 ON cx3 cy3 (c b); cy5 ON cx4 cy4 (c b); ! Estimar la covarianza entre los componentes within t=1 cx1 WITH cy1; ! Estimar las covarianzas entre los residuos del componente within (innovations) cx2 WITH cy2; cx3 WITH cy3; cx4 WITH cy4; cx5 WITH cy5; ! Estimar la covarianza entre los RI RI_x WITH RI_y; ! Fijar la correlacion entre los RI y componentes within t=1 a cero RI_x WITH cx1@0 cy1@0; RI_y WITH cx1@0 cy1@0; &quot; , OUTPUT = &quot;CINTERVAL sampstat mod stdyx tech1 tech4;&quot;, rdata = elsoc) for (i in seq(names(modelos))) { mplusModeler(modelos[[i]], modelout = paste0(&quot;mplus/&quot;,names(modelos)[i],&quot;.inp&quot;, sep=&quot;&quot;), run = 1L, quiet=T) } fit &lt;- readModels(target = &quot;mplus&quot;, filefilter = &quot;m_&quot;, recursive = F) 3.1 Indicadores de bondad de ajuste 3.1.1 Extraccion Usamos la siguiente funcion para extraer indicadores de bondad de ajuste: gof.measures ## GOF function: gof.measures = function(fit_list){ gof &lt;- list() for (i in 1:length(fit_list)) { model &lt;- gsub(&quot;.out&quot;,&quot;&quot;,names(fit_list)[i]) chisq_df &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;ChiSqM_DF&quot;]] chisq_value &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;ChiSqM_Value&quot;]] chisq_pvalue &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;ChiSqM_PValue&quot;]] CFI &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;CFI&quot;]] TLI &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;TLI&quot;]] RMSEA &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;RMSEA_Estimate&quot;]] SRMR &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;SRMR&quot;]] AIC &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;AIC&quot;]] BIC &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;BIC&quot;]] aBIC &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;aBIC&quot;]] LL &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;LL&quot;]] free_par &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;Parameters&quot;]] LL_correctf &lt;- fit_list[[i]][[&quot;summaries&quot;]][[&quot;LLCorrectionFactor&quot;]] gof[[model]] &lt;- data.frame(model,chisq_df,chisq_value,chisq_pvalue, CFI,TLI,RMSEA,SRMR, AIC,BIC,aBIC, LL,free_par,LL_correctf) } gof &lt;- dplyr::bind_rows(gof) return(gof) } gof.measures() solo requiere que se especifique como input una lista de modelos de tipo mplus.model.list. Corremos gof.measures() usando nuestra lista de modelos fit para reunir los indicadores en un dataframe llamado dtgof. dtgof &lt;- gof.measures(fit) dtgof %&gt;% select(-LL,-free_par,-LL_correctf) %&gt;% kbl(digits = 2) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot;)) model chisq_df chisq_value chisq_pvalue CFI TLI RMSEA SRMR AIC BIC aBIC m_a1 29 171.33 0 0.96 0.94 0.04 0.06 54639.86 54855.21 54740.82 m_a2 35 202.24 0 0.95 0.94 0.04 0.07 54700.06 54879.51 54784.19 m_b1 25 161.50 0 0.96 0.93 0.04 0.06 54634.64 54873.91 54746.81 m_b2 34 197.35 0 0.95 0.94 0.04 0.07 54694.43 54879.86 54781.36 m_c1 25 154.40 0 0.96 0.94 0.04 0.06 54623.60 54862.87 54735.78 m_c2 34 200.89 0 0.95 0.94 0.04 0.07 54701.75 54887.19 54788.69 m_d1 21 144.11 0 0.97 0.93 0.04 0.06 54615.30 54878.50 54738.69 m_d2 33 195.39 0 0.96 0.94 0.04 0.07 54694.53 54885.94 54784.26 3.2 Comparacion de bondad de ajuste En la tabla hemos dejado fuera del reporte las columnas Log-likelihood, su correccion y el numero de parametros libres. Estos nos serviran para calcular otros tests para comparar modelos. Para hacerlo, usamos la siguiente funcion: gof.comparison gof.comparison = function(data,fuller,nested){ dt_gof &lt;- data.table::data.table(data.table::copy(data)) comparison &lt;- paste0(nested,&quot; vs. &quot;,fuller, sep=&quot;&quot;) CFI_delta &lt;- dt_gof[model==nested,CFI] - dt_gof[model==fuller,CFI] TLI_delta &lt;- dt_gof[model==nested,TLI] - dt_gof[model==fuller,TLI] RMSEA_delta &lt;- dt_gof[model==nested,RMSEA] - dt_gof[model==fuller,RMSEA] SRMR_delta &lt;- dt_gof[model==nested,SRMR] - dt_gof[model==fuller,SRMR] AIC_delta &lt;- dt_gof[model==nested,AIC] - dt_gof[model==fuller,AIC] BIC_delta &lt;- dt_gof[model==nested,BIC] - dt_gof[model==fuller,BIC] aBIC_delta &lt;- dt_gof[model==nested,aBIC] - dt_gof[model==fuller,aBIC] free_LLcorf_nested &lt;- dt_gof[model==nested,free_par]*dt_gof[model==nested,LL_correctf] free_LLcorf_fuller &lt;- dt_gof[model==fuller,free_par]*dt_gof[model==fuller,LL_correctf] free_par_delta &lt;- dt_gof[model==nested,free_par]-dt_gof[model==fuller,free_par] CD &lt;- (free_LLcorf_nested-free_LLcorf_fuller)/free_par_delta LL_delta &lt;- dt_gof[model==nested,LL]-dt_gof[model==fuller,LL] TRd &lt;- (-2*LL_delta)/CD TRd_df &lt;- dt_gof[model==fuller,free_par]-dt_gof[model==nested,free_par] TRd_pvalue &lt;- pchisq(TRd, TRd_df, lower.tail = F) comp &lt;- data.frame(nested,fuller,comparison,CFI_delta,TLI_delta,RMSEA_delta,SRMR_delta,AIC_delta,BIC_delta,aBIC_delta,CD,TRd,TRd_df,TRd_pvalue) return(comp) } gof.comparison() sirve para comparar pares de modelos. Por ejemplo, comparamos los modelos m_d1 y m_d2. gof.comparison(dtgof,fuller=&quot;m_d1&quot;,nested=&quot;m_d2&quot;) %&gt;% select(-comparison) %&gt;% kbl(digits = 2) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot;)) nested fuller CFI_delta TLI_delta RMSEA_delta SRMR_delta AIC_delta BIC_delta aBIC_delta CD TRd TRd_df TRd_pvalue m_d2 m_d1 -0.01 0.01 0 0.01 79.22 7.44 45.57 1.94 53.09 12 0 Podemos reunir todas las comparaciones en un mismo dataframe y visualizarlas en una misma tabla. gof_comp &lt;- dplyr::bind_rows( gof.comparison(dtgof,fuller=&quot;m_a1&quot;,nested=&quot;m_a2&quot;), gof.comparison(dtgof,fuller=&quot;m_b1&quot;,nested=&quot;m_b2&quot;), gof.comparison(dtgof,nested=&quot;m_a2&quot;,fuller=&quot;m_b2&quot;), gof.comparison(dtgof,fuller=&quot;m_c1&quot;,nested=&quot;m_c2&quot;), gof.comparison(dtgof,nested=&quot;m_a2&quot;,fuller=&quot;m_c2&quot;), gof.comparison(dtgof,fuller=&quot;m_d1&quot;,nested=&quot;m_d2&quot;), gof.comparison(dtgof,nested=&quot;m_a2&quot;,fuller=&quot;m_d2&quot;), gof.comparison(dtgof,nested=&quot;m_b2&quot;,fuller=&quot;m_d2&quot;), gof.comparison(dtgof,nested=&quot;m_c2&quot;,fuller=&quot;m_d2&quot;)) gof_comp %&gt;% select(-comparison) %&gt;% kbl(digits = 3) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot;)) nested fuller CFI_delta TLI_delta RMSEA_delta SRMR_delta AIC_delta BIC_delta aBIC_delta CD TRd TRd_df TRd_pvalue m_a2 m_a1 -0.007 0.002 -0.001 0.008 60.192 24.301 43.366 2.269 31.819 6 0.000 m_b2 m_b1 -0.008 0.008 -0.002 0.009 59.791 5.956 34.552 2.037 38.188 9 0.000 m_a2 m_b2 -0.001 0.000 -0.001 0.001 5.628 -0.354 2.824 1.598 4.772 1 0.029 m_c2 m_c1 -0.011 0.003 -0.001 0.011 78.153 24.317 52.913 2.029 47.385 9 0.000 m_a2 m_c2 0.000 0.002 -0.001 0.000 -1.698 -7.679 -4.502 1.450 0.208 1 0.648 m_d2 m_d1 -0.011 0.012 -0.004 0.012 79.224 7.443 45.571 1.944 53.091 12 0.000 m_a2 m_d2 -0.002 0.002 -0.001 0.001 5.530 -6.433 -0.078 1.570 6.070 2 0.048 m_b2 m_d2 -0.001 0.002 0.000 0.000 -0.098 -6.079 -2.902 1.542 1.234 1 0.267 m_c2 m_d2 -0.002 0.000 0.000 0.001 7.228 1.246 4.424 1.690 5.459 1 0.019 Rutkowski &amp; Svetina (2014), Chen (2007) Comparacion entre modelos libres y constreñidos. Si los modelos constreñidos no cambian sustancialmente el CFI y RMSEA, se recomienda retener el modelo mas parsimonioso (constreñido). Comparacion entre modelos distintos. Para muestras mayores a 300 casos, se recomienda que: \\(\\Delta CFI &lt; 0.02\\) \\(\\Delta RMSEA &lt; 0.03\\) "],["interpretacion-de-coeficientes.html", "4 Interpretacion de coeficientes 4.1 Componente Between 4.2 Componente Within", " 4 Interpretacion de coeficientes screenreg(fit[[8]], type = &quot;un&quot;, params = c(&quot;regression&quot;,&quot;undirected&quot;,&quot;variability&quot;), summaries = c(&quot;ChiSqM_Value&quot;, &quot;ChiSqM_PValue&quot;, &quot;CFI&quot;, &quot;TLI&quot;, &quot;RMSEA_Estimate&quot;, &quot;Observations&quot;), # custom.header = list(&quot;RICLPM&quot;=1), custom.model.names = c(&quot;RICLPM bidireccional constrenido&quot;), digits = 3, single.row=TRUE) ## ## ====================================================== ## RICLPM bidireccional constrenido ## ------------------------------------------------------ ## CX2&lt;-CX1 0.155 (0.025) *** ## CX2&lt;-CY1 0.013 (0.011) ## CX3&lt;-CX2 0.155 (0.025) *** ## CX3&lt;-CY2 0.013 (0.011) ## CX4&lt;-CX3 0.155 (0.025) *** ## CX4&lt;-CY3 0.013 (0.011) ## CX5&lt;-CX4 0.155 (0.025) *** ## CX5&lt;-CY4 0.013 (0.011) ## CY2&lt;-CX1 0.061 (0.026) * ## CY2&lt;-CY1 0.142 (0.023) *** ## CY3&lt;-CX2 0.061 (0.026) * ## CY3&lt;-CY2 0.142 (0.023) *** ## CY4&lt;-CX3 0.061 (0.026) * ## CY4&lt;-CY3 0.142 (0.023) *** ## CY5&lt;-CX4 0.061 (0.026) * ## CY5&lt;-CY4 0.142 (0.023) *** ## CX1&lt;-&gt;CY1 0.177 (0.022) *** ## CX2&lt;-&gt;CY2 0.134 (0.018) *** ## CX3&lt;-&gt;CY3 0.061 (0.016) *** ## CX4&lt;-&gt;CY4 0.222 (0.029) *** ## CX5&lt;-&gt;CY5 0.008 (0.017) ## RI_X&lt;-&gt;RI_Y 0.186 (0.017) *** ## RI_X&lt;-&gt;CX1 0.000 (0.000) ## RI_X&lt;-&gt;CY1 0.000 (0.000) ## RI_Y&lt;-&gt;CX1 0.000 (0.000) ## RI_Y&lt;-&gt;CY1 0.000 (0.000) ## RI_X&lt;-&gt;RI_X 0.141 (0.017) *** ## RI_Y&lt;-&gt;RI_Y 0.548 (0.028) *** ## CX1&lt;-&gt;CX1 0.439 (0.028) *** ## CY1&lt;-&gt;CY1 0.876 (0.037) *** ## MARCHW01&lt;-&gt;MARCHW01 0.000 (0.000) ## MARCHW02&lt;-&gt;MARCHW02 0.000 (0.000) ## MARCHW03&lt;-&gt;MARCHW03 0.000 (0.000) ## MARCHW04&lt;-&gt;MARCHW04 0.000 (0.000) ## MARCHW05&lt;-&gt;MARCHW05 0.000 (0.000) ## REDESW01&lt;-&gt;REDESW01 0.000 (0.000) ## REDESW02&lt;-&gt;REDESW02 0.000 (0.000) ## REDESW03&lt;-&gt;REDESW03 0.000 (0.000) ## REDESW04&lt;-&gt;REDESW04 0.000 (0.000) ## REDESW05&lt;-&gt;REDESW05 0.000 (0.000) ## CX2&lt;-&gt;CX2 0.278 (0.021) *** ## CX3&lt;-&gt;CX3 0.214 (0.020) *** ## CX4&lt;-&gt;CX4 0.715 (0.037) *** ## CX5&lt;-&gt;CX5 0.276 (0.024) *** ## CY2&lt;-&gt;CY2 0.733 (0.036) *** ## CY3&lt;-&gt;CY3 0.578 (0.032) *** ## CY4&lt;-&gt;CY4 0.900 (0.041) *** ## CY5&lt;-&gt;CY5 0.734 (0.038) *** ## ------------------------------------------------------ ## ChiSqM_Value 195.387 ## ChiSqM_PValue 0.000 ## CFI 0.955 ## TLI 0.938 ## RMSEA_Estimate 0.041 ## Observations 2927 ## ====================================================== ## *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05 Figura 4.1: RI-CLPM full bidireccional constreñido para Participación Offline y Participación On-line 4.1 Componente Between Ambos interceptos aleatorios tienen una varianza significativa. Esto implica que hay diferencias estables, entre individuos, respecto a sus puntajes esperados en participacion off-line y on-line. Si la varianza no fuera distinta de 0, querria decir que han muy poca diferencias estables entre unidades y que cada individuo fluctua en torno a la misma gran media en el tiempo. La covarianza entre los interceptos aleatorios es significativa (\\(.186, SE=.017\\)), lo que sugiere que los individuos que tienen una alta participacion online tambien tienen una alta participacion off-line. 4.2 Componente Within Recordemos que los componentes within representan las desviaciones temporales en \\(t\\) del individuo \\(i\\) respecto a sus puntajes esperados (rasgos estables). Los efectos autorregresivos tanto para participacion off-line como para participacion online son significativos (Off-line: \\(\\alpha_{t}=0.155; SE=.025\\) On-line: \\(\\gamma_{t}=0.142; SE=.023\\)). Los coeficientes indican el grado en el cual una variable continua incrementandose, en terminos de cambio individual, habiendo controlado por las caracteristicas individuales estables. De esta manera una desviacion de un punto sobre el nivel promedio de los individuos en participacion off-line persiste en la siguiente medicion como una desviacion positiva de 0.155 puntos respecto a su puntaje esperado. En el caso de la participacion on-line, una desviacion de un punto sobre el nivel promedio individual persiste durante la siguiente medicion como una desviacion positiva de 0.142 puntos sobre el nivel promedio individual. Los efectos cross-lagged nos muestran que existe un efecto longitudinal intra-individuo de la participacion off-line sobre la participacion on-line (\\(\\gamma_{t}=0.061; SE=0.026\\)), pero no hay evidencia de que exista un efecto longitudinal de la participacion on-line sobre la participacion off-line. Siendo asi, se observa que una desviacion de un punto sobre el nivel promedio de los individuos en participacion off-line predice una desviacion positiva de 0.061 puntos en la participacion on-line durante la siguiente medicion, controlando por las desviaciones respecto al puntaje esperado en participacion on-line. "],["referencias.html", "5 Referencias", " 5 Referencias Hamaker, E. L., Kuiper, R. M., &amp; Grasman, R. P. P. P. (2015). A critique of the cross-lagged panel model. Psychological Methods, 20(1), 102116. https://doi.org/10.1037/a0038889 Hamaker, E. L. (2018). How to run the RICLPM with Mplus (MAR 2018), (21), 19. Hamaker, E. L. (2018). How to run the RICLPM with Mplus (NOV 2018), 1(2), 2018. Osborne, D., &amp; Sibley, C. G. (2020). Does Openness to Experience predict changes in conservatism? A nine-wave longitudinal investigation into the personality roots to ideology. Journal of Research in Personality, 87(xxxx), 103979. https://doi.org/10.1016/j.jrp.2020.103979 Lüdtke, O., &amp; Robitzsch, A. (2021). A Critique of the Random Intercept Cross-Lagged Panel Model. Mulder, J. D., &amp; Hamaker, E. L. (2021). Three Extensions of the Random Intercept Cross-Lagged Panel Model. Structural Equation Modeling, 28(4), 638648. https://doi.org/10.1080/10705511.2020.1784738 Usami, S. (2021). On the Differences between General Cross-Lagged Panel Model and Random-Intercept Cross-Lagged Panel Model: Interpretation of Cross-Lagged Parameters and Model Choice. Structural Equation Modeling, 28(3), 331344. https://doi.org/10.1080/10705511.2020.1821690 "]]
